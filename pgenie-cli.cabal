cabal-version: 3.0

name: pgenie-cli
version: 0.1
build-type: Simple

common language-settings
  default-extensions: ApplicativeDo, Arrows, BangPatterns, BinaryLiterals, BlockArguments, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, DerivingVia, DuplicateRecordFields, EmptyCase, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, HexFloatLiterals, LambdaCase, LiberalTypeSynonyms, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, NumericUnderscores, OverloadedLabels, OverloadedStrings, PatternGuards, PatternSynonyms, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, StrictData, TemplateHaskell, TupleSections, TypeApplications, TypeFamilies, TypeOperators, UndecidableInstances, ViewPatterns
  default-language: Haskell2010

library
  import: language-settings
  hs-source-dirs: library
  exposed-modules:
    PgenieCli.Prelude
  build-depends:
    attoparsec,
    coalmine,
    directory,
    pgenie-service,
    rerebase,

test-suite test
  import: language-settings
  type: exitcode-stdio-1.0
  hs-source-dirs: test
  main-is: Main.hs
  build-depends:
    coalmine,
    pgenie-cli,
    rerebase,

executable pgn
  import: language-settings
  hs-source-dirs: pgn
  main-is: Main.hs
  build-depends:
    coalmine,
    optima,
    pgenie-cli,
    rerebase,
