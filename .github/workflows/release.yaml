
name: Release

on:
  push:
    branches:
      - dev

jobs:
  build-linux-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: get-metadata
        uses: nikita-volkov/extract-metadata-from-cabal@5c9a9d23eee03e81dc7c348f6a5c70fe609347a6
      - run: ARTIFACT="artifact/pgenie-client-app-v${{ steps.get-metadata.outputs.version }}-linux-x64.tar.xz"
      - uses: haskell/actions/setup@v2
        with:
          enable-stack: true
          stack-version: 2.7.5
          stack-no-global: true
      - uses: actions/cache@v3
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('**.cabal') }}
          restore-keys: ${{ runner.os }}-
      - run: stack build --local-bin-path artifact --copy-bins
      - run: tar cJvf "$ARTIFACT" -C artifact pgn
      - uses: actions/upload-artifact@v3
        with:
          name: linux-x64
          path: ${{env.ARTIFACT}}
          if-no-files-found: error

  build-macos-artifact:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - id: get-metadata
        uses: nikita-volkov/extract-metadata-from-cabal@5c9a9d23eee03e81dc7c348f6a5c70fe609347a6
      - run: ARTIFACT="artifact/pgenie-client-app-v${{ steps.get-metadata.outputs.version }}-macos-x64.tar.xz"
      - uses: haskell/actions/setup@v2
        with:
          enable-stack: true
          stack-version: 2.7.5
          stack-no-global: true
      - uses: actions/cache@v3
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('**.cabal') }}
          restore-keys: ${{ runner.os }}-
      - run: stack build --local-bin-path artifact --copy-bins
      - run: tar cJvf "$ARTIFACT" -C artifact pgn
      - uses: actions/upload-artifact@v3
        with:
          name: macos-x64
          path: ${{env.ARTIFACT}}
          if-no-files-found: error
  
  build-windows-artifact:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - id: get-metadata
        uses: nikita-volkov/extract-metadata-from-cabal@5c9a9d23eee03e81dc7c348f6a5c70fe609347a6
      - run: ARTIFACT="artifact/pgenie-client-app-v${{ steps.get-metadata.outputs.version }}-windows-x64.tar.xz"
      - uses: haskell/actions/setup@v2
        with:
          enable-stack: true
          stack-version: 2.7.5
          stack-no-global: true
      - uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Roaming\stack
            ~\AppData\Local\Programs\stack
            .stack-work
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('**.cabal') }}
          restore-keys: ${{ runner.os }}-
      - run: stack build --local-bin-path artifact --copy-bins
      - uses: thedoctor0/zip-release@0.6.2
        with:
          type: zip
          filename: ${{env.ARTIFACT}}
          path: artifact/pgn.exe
      - uses: actions/upload-artifact@v3
        with:
          name: windows-x64
          path: ${{env.ARTIFACT}}
          if-no-files-found: error

  release:
    needs:
      - build-linux-artifact
      - build-macos-artifact
      - build-windows-artifact
    runs-on: ubuntu-latest
    steps:
      - id: get-metadata
        uses: nikita-volkov/extract-metadata-from-cabal@5c9a9d23eee03e81dc7c348f6a5c70fe609347a6
      - uses: actions/download-artifact@v2
        with:
          name: linux-x64
          path: artifact
      - uses: actions/download-artifact@v2
        with:
          name: macos-x64
          path: artifact
      - uses: actions/download-artifact@v2
        with:
          name: windows-x64
          path: artifact
      - name: Tag and release
        uses: avakar/tag-and-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get-metadata.outputs.version }}
      - name: Upload assets to Github release
        uses: xresloader/upload-to-github-release@v1.3.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "artifact/*"
          tag_name: v${{ steps.get-metadata.outputs.version }}
